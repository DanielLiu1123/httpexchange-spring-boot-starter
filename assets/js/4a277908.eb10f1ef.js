"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[436],{6436:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=n(7624),s=n(2172);const r={sidebar_position:40},l="Configuration Properties",a={id:"configuration-properties",title:"Configuration Properties",description:"Configuration properties for the HttpExchange Spring Boot Starter project.",source:"@site/docs/40-configuration-properties.md",sourceDirName:".",slug:"/configuration-properties",permalink:"/httpexchange-spring-boot-starter/docs/configuration-properties",draft:!1,unlisted:!1,editUrl:"https://github.com/DanielLiu1123/httpexchange-spring-boot-starter/tree/main/website/docs/40-configuration-properties.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"tutorialSidebar",previous:{title:"Customization",permalink:"/httpexchange-spring-boot-starter/docs/extensions/customization"},next:{title:"Version Compatibility",permalink:"/httpexchange-spring-boot-starter/docs/version"}},d={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"httpexchange-spring-boot-autoconfigure",id:"httpexchange-spring-boot-autoconfigure",level:2},{value:"http-exchange",id:"http-exchange",level:3},{value:"http-exchange.refresh",id:"http-exchangerefresh",level:3}];function o(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"configuration-properties",children:"Configuration Properties"}),"\n",(0,i.jsx)(t.p,{children:"Configuration properties for the HttpExchange Spring Boot Starter project."}),"\n",(0,i.jsxs)(t.p,{children:["This page was generated by ",(0,i.jsx)(t.a,{href:"https://github.com/rodnansol/spring-configuration-property-documenter/blob/master/docs/modules/ROOT/pages/gradle-plugin.adoc",children:"spring-configuration-property-documenter"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"#httpexchange-spring-boot-autoconfigure",children:(0,i.jsx)(t.strong,{children:"httpexchange-spring-boot-autoconfigure"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsxs)(t.a,{href:"#http-exchange",children:[(0,i.jsx)(t.strong,{children:"http-exchange"})," - ",(0,i.jsx)(t.code,{children:"io.github.danielliu1123.httpexchange.HttpExchangeProperties"})]})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsxs)(t.a,{href:"#http-exchange.refresh",children:[(0,i.jsx)(t.strong,{children:"http-exchange.refresh"})," - ",(0,i.jsx)(t.code,{children:"io.github.danielliu1123.httpexchange.HttpExchangeProperties$Refresh"})]})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"httpexchange-spring-boot-autoconfigure",children:"httpexchange-spring-boot-autoconfigure"}),"\n",(0,i.jsx)(t.h3,{id:"http-exchange",children:"http-exchange"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Class:"})," ",(0,i.jsx)(t.code,{children:"io.github.danielliu1123.httpexchange.HttpExchangeProperties"})]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Key"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Default value"}),(0,i.jsx)(t.th,{children:"Deprecation"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"base-packages"}),(0,i.jsx)(t.td,{children:"java.util.Set<java.lang.String>"}),(0,i.jsx)(t.td,{children:"Base packages to scan, use {@link EnableExchangeClients#basePackages} first if configured."}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"base-url"}),(0,i.jsx)(t.td,{children:"java.lang.String"}),(0,i.jsxs)(t.td,{children:["Default base url, 'http' scheme can be omitted. <p> If loadbalancer is enabled, this value means the service id. <ul> <li>localhost:8080</li> <li>",(0,i.jsx)(t.a,{href:"http://localhost:8080&lt;/li",children:"http://localhost:8080&lt;/li"}),"> <li>",(0,i.jsx)(t.a,{href:"https://localhost:8080&lt;/li",children:"https://localhost:8080&lt;/li"}),"> <li>localhost:8080/api</li> <li>user(service id)</li> </ul>"]}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"bean-to-query-enabled"}),(0,i.jsx)(t.td,{children:"java.lang.Boolean"}),(0,i.jsx)(t.td,{children:"Whether to convert Java bean to query parameters, default value is {@code false}."}),(0,i.jsx)(t.td,{children:"false"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"channels"}),(0,i.jsx)(t.td,{children:"java.util.List<io.github.danielliu1123.httpexchange.HttpExchangeProperties$Channel>"}),(0,i.jsx)(t.td,{children:"Channels configuration."}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"client-type"}),(0,i.jsx)(t.td,{children:"io.github.danielliu1123.httpexchange.HttpExchangeProperties$ClientType"}),(0,i.jsx)(t.td,{children:'Client Type, if not specified, an appropriate client type will be set. <ul> <li> Use {@link ClientType#REST_CLIENT} if none of the methods in the client return Reactive type. <li> Use {@link ClientType#WEB_CLIENT} if any method in the client returns Reactive type. </ul> <p> In most cases, there\'s no need to explicitly specify the client type. <p color="orange"> NOTE: the {@link #connectTimeout} and {@link #readTimeout} settings are not supported by {@link ClientType#WEB_CLIENT}. @see ClientType @since 3.2.0'}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"clients"}),(0,i.jsx)(t.td,{children:"java.util.Set<java.lang.Class<?>>"}),(0,i.jsx)(t.td,{children:"Exchange client interfaces to register as beans, use {@link EnableExchangeClients#clients} first if configured. @since 3.2.0"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"connect-timeout"}),(0,i.jsx)(t.td,{children:"java.lang.Integer"}),(0,i.jsx)(t.td,{children:"Connect timeout duration, specified in milliseconds. @since 3.2.0"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"enabled"}),(0,i.jsx)(t.td,{children:"java.lang.Boolean"}),(0,i.jsx)(t.td,{children:"Whether to enable http exchange autoconfiguration, default {@code true}."}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"headers"}),(0,i.jsx)(t.td,{children:"java.util.List<io.github.danielliu1123.httpexchange.HttpExchangeProperties$Header>"}),(0,i.jsx)(t.td,{children:"Default headers will be added to all the requests."}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"http-client-reuse-enabled"}),(0,i.jsx)(t.td,{children:"java.lang.Boolean"}),(0,i.jsx)(t.td,{children:"Whether to enable http client reuse, default {@code true}. <p> Same {@link Channel} configuration will share the same http client if enabled. @since 3.2.2"}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"loadbalancer-enabled"}),(0,i.jsx)(t.td,{children:"java.lang.Boolean"}),(0,i.jsx)(t.td,{children:"Whether to enable loadbalancer, default {@code true}. <p> Prerequisites: <ul> <li> {@code spring-cloud-starter-loadbalancer} dependency in the classpath.</li> <li> {@code spring.cloud.loadbalancer.enabled=true}</li> </ul> @since 3.2.0"}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"read-timeout"}),(0,i.jsx)(t.td,{children:"java.lang.Integer"}),(0,i.jsx)(t.td,{children:"Read timeout duration, specified in milliseconds. @since 3.2.0"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"request-mapping-support-enabled"}),(0,i.jsx)(t.td,{children:"java.lang.Boolean"}),(0,i.jsx)(t.td,{children:'whether to process {@link org.springframework.web.bind.annotation.RequestMapping} based annotation, default {@code false}. <p color="red"> Recommending to use {@link org.springframework.web.service.annotation.HttpExchange} instead of {@link org.springframework.web.bind.annotation.RequestMapping}. @since 3.2.0'}),(0,i.jsx)(t.td,{children:"false"}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"warn-unused-config-enabled"}),(0,i.jsx)(t.td,{children:"java.lang.Boolean"}),(0,i.jsx)(t.td,{children:"Whether to check unused configuration, default {@code true}. @since 3.2.0"}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"http-exchangerefresh",children:"http-exchange.refresh"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Class:"})," ",(0,i.jsx)(t.code,{children:"io.github.danielliu1123.httpexchange.HttpExchangeProperties$Refresh"})]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Key"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Default value"}),(0,i.jsx)(t.th,{children:"Deprecation"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"enabled"}),(0,i.jsx)(t.td,{children:"java.lang.Boolean"}),(0,i.jsxs)(t.td,{children:['Whether to enable refresh exchange clients, default {@code false}. <p> This feature needs {@code spring-cloud-context} dependency in the classpath. <p color="orange"> NOTE: This feature is not supported by native image. @see <a href="',(0,i.jsx)(t.a,{href:"https://github.com/spring-cloud/spring-cloud-release/wiki/AOT-transformations-and-native-image-support#refresh-scope&quot;&gt;Refresh",children:"https://github.com/spring-cloud/spring-cloud-release/wiki/AOT-transformations-and-native-image-support#refresh-scope&quot;&gt;Refresh"})," Scope</a>"]}),(0,i.jsx)(t.td,{children:"false"}),(0,i.jsx)(t.td,{})]})})]}),"\n",(0,i.jsxs)(t.p,{children:["This is a generated file, generated at: ",(0,i.jsx)(t.strong,{children:"2024-06-29T11:00:15.870517"})]})]})}function h(e={}){const{wrapper:t}={...(0,s.M)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},2172:(e,t,n)=>{n.d(t,{I:()=>a,M:()=>l});var i=n(1504);const s={},r=i.createContext(s);function l(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);